<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>coderWang的博客</title>
  <subtitle>是谁在召唤我？</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://comradeWang.github.com/"/>
  <updated>2017-07-09T02:42:13.076Z</updated>
  <id>http://comradeWang.github.com/</id>
  
  <author>
    <name>Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML 5的革新——语义化标签</title>
    <link href="http://comradeWang.github.com/2017/07/09/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/"/>
    <id>http://comradeWang.github.com/2017/07/09/语义化标签/</id>
    <published>2017-07-09T02:41:00.000Z</published>
    <updated>2017-07-09T02:42:13.076Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML-5的革新——语义化标签"><a href="#HTML-5的革新——语义化标签" class="headerlink" title="HTML 5的革新——语义化标签"></a>HTML 5的革新——语义化标签</h1><p>标签： html5 语义化标签</p>
<hr>
<blockquote>
<p>HTML 5的革新之一：语义化标签一节元素标签。<br>在HTML 5出来之前，我们用<code>div</code>来表示页面章节，但是这些 <code>div</code>都没有实际意义。（即使我们用css样式的id和class形容这块内容的意义）。这些标签只是我们提供给浏览器的指令，只是定义一个网页的某些部分。但现在，那些之前没“意义”的标签因为因为html5的出现消失了，这就是我们平时说的“语义”。</p>
</blockquote>
<p>看下图没有用div标签来布局<br><img src="http://www.html5jscss.com/pic/htmljscss/html5-layout.jpg" alt="此处输入图片的描述"></p>
<hr>
<h2 id="Html5-的布局"><a href="#Html5-的布局" class="headerlink" title="Html5 的布局"></a>Html5 的布局</h2><p>嗯，如上图那个页面结构没有一个div，都是采用html5语义标签（用哪些标签，关键取决于你的设计目标）。<br>但是也不要因为html5新标签的出现，而随意用之，错误的使用肯定会事与愿违。所以有些地方还是要用div的，就是因为div没有任何意义的元素，他只是一个标签，仅仅是用来构建外观和结构。因此是最适合做容器的标签。<br>W3C定义了这些语义标签，不可能完全符合我们有时的设计目标，就像制定出来的法律不可能流传100年都不改变，更何况它才制定没多久，不可能这些语义标签对所以设计目标的适应。只是一定程度上的“通用”，我们的目标是让爬虫读懂重要的东西就够了。<br>结论：不能因为有了HTML 5标签就弃用了div，每个事物都有它的独有作用的。<br>节点元素标签因使用的地方不同，我将他们分为：节元素标签、文本元素标签、分组元素标签分开来讲解HTML5中新增加的语义化标签和使用总结。</p>
<hr>
<h2 id="header元素"><a href="#header元素" class="headerlink" title="header元素"></a>header元素</h2><p>header 元素代表“网页”或“section”的页眉。<br>通常包含<code>h1-h6</code>元素或<code>hgroup</code>，作为整个页面或者一个内容块的标题。也可以包裹一节的目录部分，一个搜索框，一个<code>nav</code>，或者任何相关logo。<br>整个页面没有限制header元素的个数，可以拥有多个，可以为每个内容块增加一个header元素</p>
<pre><code>&lt;header&gt;
&lt;hgroup&gt;
    &lt;h1&gt;网站标题&lt;/h1&gt;
    &lt;h1&gt;网站副标题&lt;/h1&gt;
&lt;/hgroup&gt;
&lt;/header&gt;
</code></pre><p>hearder使用注意：</p>
<ul>
<li>可以是“网页”或任意“section”的头部部分；</li>
<li>没有个数限制。</li>
<li>如果hgroup或h1-h6自己就能工作的很好，那就不要用header。</li>
</ul>
<hr>
<h2 id="footer元素"><a href="#footer元素" class="headerlink" title="footer元素"></a>footer元素</h2><p><code>footer</code>元素代表“网页”或“section”的页脚，通常含有该节的一些基本信息，譬如：作者，相关文档链接，版权资料。如果<code>footer</code>元素包含了整个节，那么它们就代表附录，索引，提拔，许可协议，标签，类别等一些其他类似信息。</p>
<pre><code>&lt;footer&gt;
COPYRIGHT@wxy
&lt;/footer&gt;
</code></pre><p>footer使用注意：</p>
<ul>
<li>可以是“网页”或任意“section”的底部部分；</li>
<li>没有个数限制，除了包裹的内容不一样，其他跟header类似。</li>
</ul>
<hr>
<h2 id="hgroup元素"><a href="#hgroup元素" class="headerlink" title="hgroup元素"></a>hgroup元素</h2><p><code>hgroup</code>元素代表“网页”或“section”的标题，当元素有多个层级时，该元素可以将<code>h1</code>到<code>h6</code>元素放在其内，譬如文章的主标题和副标题的组合</p>
<pre><code>&lt;hgroup&gt;
&lt;h1&gt;这是一篇介绍HTML 5语义化标签和更简洁的结构&lt;/h1&gt;
&lt;h2&gt;HTML 5&lt;/h2&gt;
&lt;/hgroup&gt;
</code></pre><p>hgroup使用注意：</p>
<ul>
<li>如果只需要一个h1-h6标签就不用hgroup</li>
<li>如果有连续多个h1-h6标签就用hgroup</li>
<li>如果有连续多个标题和其他文章数据，h1-h6标签就用hgroup包住，和其他文章元数据一起放入header标签</li>
</ul>
<hr>
<p>##nav元素<br><code>nav</code>元素代表页面的导航链接区域。用于定义页面的 <strong><em>主要导航部分</em></strong>。</p>
<pre><code>&lt;nav&gt;
&lt;ul&gt;
    &lt;li&gt;HTML 5&lt;/li&gt;
    &lt;li&gt;CSS3&lt;/li&gt;
    &lt;li&gt;JavaScript&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
</code></pre><p>但是我在有些时候却情不自禁的想用它，譬如：侧边栏上目录，面包屑导航，搜索样式，或者下一篇上一篇文章，但是事实上规范上说nav只能用在页面主要导航部分上。页脚区域中的链接列表，虽然指向不同网站的不同区域，譬如服务条款，版权页等，这些footer元素就能够用了。</p>
<p>nav使用注意：</p>
<ul>
<li>用在整个页面主要导航部分上，不合适就不要用nav元素；</li>
</ul>
<hr>
<p>##aside元素</p>
<p><code>aside</code>元素被包含在article元素中作为主要内容的附属信息部分，其中的内容可以是与当前文章有关的相关资料、标签、名次解释等。（特殊的section）</p>
<p>在article元素之外使用作为页面或站点全局的附属信息部分。最典型的是侧边栏，其中的内容可以是日志串连，其他组的导航，甚至广告，这些内容相关的页面。</p>
<pre><code>&lt;article&gt;
&lt;p&gt;内容&lt;/p&gt;
&lt;aside&gt;
    &lt;h1&gt;作者简介&lt;/h1&gt;
    &lt;p&gt;comradeWang，前端一枚&lt;/p&gt;
&lt;/aside&gt;
&lt;/article&gt;
</code></pre><p>aside使用总结：</p>
<ul>
<li>aside在article内表示主要内容的附属信息，</li>
<li>在article之外可做侧边栏</li>
<li>如果是广告，其它日志链接 或者其它分类导航也可以用。</li>
</ul>
<hr>
<p>##section元素<br><code>section</code>元素代表文档中的“节”或“段”，“段”可以是指一篇文章里按照主题的分段；“节”可以是指一个页面里的分组。<br><code>section</code>通常还带标题，虽然html5中section会自动给标题<code>h1-h6</code>降级，但是最好手动给他们降级。如下：</p>
<pre><code>&lt;section&gt;
&lt;h1&gt;section是啥？&lt;/h1&gt;
&lt;article&gt;
    &lt;h2&gt;关于section&lt;/h1&gt;
    &lt;p&gt;section的介绍&lt;/p&gt;
    &lt;section&gt;
        &lt;h3&gt;关于其他&lt;/h3&gt;
        &lt;p&gt;关于其他section的介绍&lt;/p&gt;
    &lt;/section&gt;
&lt;/article&gt;
&lt;/section&gt;
</code></pre><p>section使用注意：</p>
<p>  一张页面可以用section划分为简介、文章条目和联系信息。不过在文章内页，最好用article。section不是一般意义上的容器元素，如果想作为样式展示和脚本的便利，可以用div。</p>
<ul>
<li>表示文档中的节或者段；</li>
<li>article、nav、aside可以理解为特殊的section，所以如果可以用article、nav、aside就不要用section，没实际意义的就用div</li>
</ul>
<hr>
<p>##article元素<br><code>article</code>元素最容易跟<code>section</code>和<code>div</code>容易混淆，其实<code>article</code>代表一个在文档，页面或者网站中自成一体的内容，其目的是为了让开发者独立开发或重用。譬如论坛的帖子，博客上的文章，一篇用户的评论，一个互动的widget小工具。（特殊的section）</p>
<pre><code>&lt;article&gt;
    &lt;h1&gt;一篇文章&lt;/h1&gt;
    &lt;p&gt;文章内容..&lt;/p&gt;
    &lt;footer&gt;
        &lt;p&gt;&lt;small&gt;test&lt;/small&gt;&lt;/p&gt;
    &lt;/footer&gt;
&lt;/article&gt;
</code></pre><p>设计师、程序员、前端工程师都是一个独立的整体，他们组成了网站制作基本配备，当然还有其他成员~~。设计师、程序员、前端工程师就像article，是一个个独立的整体，而section将这些自成一体的article包裹，就组成了一个团体。</p>
<p>article和section和例子就例举这么多了，具体情况具体分析，不易深究。漏了<code>div</code>，其实div就是只是想用来把元素组合或者给它们加样式时使用。</p>
<p>article使用注意：</p>
<ul>
<li>自身独立的情况下：用article</li>
<li>是相关内容：用section</li>
<li>没有语义的：用div</li>
</ul>
<hr>
<p>##HTML5其他结构元素标签<br>HTML5节元素标签包括<code>body article nav aside section header footer hgroup</code>，还有<code>h1-h6 address</code>。<br><code>address</code>代表区块容器，必须是作为联系信息出现，邮编地址、邮件地址等等,一般出现在footer。<br><code>h1-h6</code>因为<code>hgroup</code>，<code>section</code>和<code>article</code>的出现，h1-h6定义也发生了变化，允许一张页面出现多个<code>h1</code>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HTML-5的革新——语义化标签&quot;&gt;&lt;a href=&quot;#HTML-5的革新——语义化标签&quot; class=&quot;headerlink&quot; title=&quot;HTML 5的革新——语义化标签&quot;&gt;&lt;/a&gt;HTML 5的革新——语义化标签&lt;/h1&gt;&lt;p&gt;标签： html5 语义化标
    
    </summary>
    
    
      <category term="Html5" scheme="http://comradeWang.github.com/tags/Html5/"/>
    
  </entry>
  
  <entry>
    <title>Html5面试题（新特性）</title>
    <link href="http://comradeWang.github.com/2017/07/05/Html5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://comradeWang.github.com/2017/07/05/Html5新特性/</id>
    <published>2017-07-05T05:29:00.000Z</published>
    <updated>2017-07-05T05:29:40.229Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Web前端面试题"><a href="#Web前端面试题" class="headerlink" title="Web前端面试题"></a>Web前端面试题</h1><h3 id="1-新的-HTML5-文档类型和字符集是？"><a href="#1-新的-HTML5-文档类型和字符集是？" class="headerlink" title="1. 新的 HTML5 文档类型和字符集是？"></a>1. 新的 HTML5 文档类型和字符集是？</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> HTML5 文档类型很简单：</div><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line">HTML5 使用 UTF-8 编码示例：</div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">”UTF-8″</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="2-HTML5-中如何嵌入’音频’？"><a href="#2-HTML5-中如何嵌入’音频’？" class="headerlink" title="2. HTML5 中如何嵌入’音频’？"></a>2. HTML5 中如何嵌入’音频’？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;audio controls&gt;</div><div class="line">    &lt;source src=”jamshed.mp3″ type=”audio/mpeg”&gt;</div><div class="line">    Your browser does’nt support audio embedding feature.</div><div class="line">&lt;/audio&gt;</div></pre></td></tr></table></figure>
<h3 id="3-HTML5-中如何嵌入视频？"><a href="#3-HTML5-中如何嵌入视频？" class="headerlink" title="3. HTML5 中如何嵌入视频？"></a>3. HTML5 中如何嵌入视频？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;video width=”450″ height=”340″ controls&gt;</div><div class="line">  &lt;source src=”jamshed.mp4″ type=”video/mp4″&gt;</div><div class="line">   Your browser does’nt support video embedding feature.</div><div class="line">&lt;/video&gt;</div></pre></td></tr></table></figure>
<h3 id="4-除了-audio-和-video，HTML5-还有哪些媒体标签？"><a href="#4-除了-audio-和-video，HTML5-还有哪些媒体标签？" class="headerlink" title="4. 除了 audio 和 video，HTML5 还有哪些媒体标签？"></a>4. 除了 audio 和 video，HTML5 还有哪些媒体标签？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">HTML5 对于多媒体提供了强有力的支持，除了 audio 和 video 标签外，还支持以下标签：</div><div class="line"></div><div class="line">&lt;embed&gt; 标签定义嵌入的内容，比如插件。</div><div class="line">&lt;embed type=”video/quicktime” src=”Fishing.mov”&gt;</div><div class="line"></div><div class="line">&lt;source&gt; 对于定义多个数据源很有用。</div><div class="line">&lt;video width=”450″ height=”340″ controls&gt;</div><div class="line">     &lt;source src=”jamshed.mp4″ type=”video/mp4″&gt;</div><div class="line">     &lt;source src=”jamshed.ogg” type=”video/ogg”&gt;</div><div class="line">&lt;/video&gt;</div><div class="line"></div><div class="line">&lt;track&gt; 标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。</div><div class="line"></div><div class="line">&lt;video width=”450″ height=”340″ controls&gt;</div><div class="line">     &lt;source src=”jamshed.mp4″ type=”video/mp4″&gt;</div><div class="line">     &lt;source src=”jamshed.ogg” type=”video/ogg”&gt;</div><div class="line">     &lt;track kind=”subtitles” label=”English” src=”jamshed_en.vtt” srclang=”en” default&gt;&lt;/track&gt;</div><div class="line">      &lt;track kind=”subtitles” label=”Arabic” src=”jamshed_ar.vtt” srclang=”ar”&gt;&lt;/track&gt;</div><div class="line">&lt;/video&gt;</div></pre></td></tr></table></figure>
<h3 id="5-HTML5-Canvas-元素有什么用？"><a href="#5-HTML5-Canvas-元素有什么用？" class="headerlink" title="5. HTML5 Canvas 元素有什么用？"></a>5. HTML5 Canvas 元素有什么用？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Canvas 元素用于在网页上绘制图形，该元素标签强大之处在于可以直接在 HTML 上进行图形操作。</div><div class="line">&lt;canvas id=”canvas1″ width=”300″ height=”100″&gt;</div><div class="line">&lt;/canvas&gt;</div></pre></td></tr></table></figure>
<ul>
<li><a href="http://www.cnblogs.com/lhb25/p/html5-canvas-demos.html" target="_blank" rel="external">不可思议的 HTML5 Canvas 应用试验</a></li>
<li><a href="http://www.cnblogs.com/lhb25/archive/2011/04/12/1964343.html" target="_blank" rel="external">18个基于 HTML5 Canvas 的图表库</a></li>
<li><a href="http://www.cnblogs.com/lhb25/archive/2011/03/12/1964298.html" target="_blank" rel="external"> 推荐14款强大的HTML5素描及绘图工具</a></li>
</ul>
<hr>
<h3 id="6-HTML5-存储类型有什么区别？"><a href="#6-HTML5-存储类型有什么区别？" class="headerlink" title="6. HTML5 存储类型有什么区别？"></a>6. HTML5 存储类型有什么区别？</h3><blockquote>
<p>HTML5 能够本地存储数据，在之前都是使用 cookies 使用的。HTML5 提供了下面两种本地存储方案：</p>
<p>localStorage 用于持久化的本地存储，数据永远不会过期，关闭浏览器也不会丢失。</p>
<p>sessionStorage 同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储</p>
</blockquote>
<h3 id="7-HTML5-有哪些新增的表单元素？"><a href="#7-HTML5-有哪些新增的表单元素？" class="headerlink" title="7.HTML5 有哪些新增的表单元素？"></a>7.HTML5 有哪些新增的表单元素？</h3><p>HTML5 新增了很多表单元素让开发者构建更优秀的 Web 应用程序。</p>
<ul>
<li>datalist</li>
<li>datetime</li>
<li>output</li>
<li>keygen </li>
<li>date </li>
<li>month </li>
<li>week</li>
<li>time</li>
<li>color</li>
<li>number </li>
<li>range </li>
<li>email </li>
<li>url</li>
</ul>
<h3 id="8-HTML5-废弃了哪些-HTML4-标签？"><a href="#8-HTML5-废弃了哪些-HTML4-标签？" class="headerlink" title="8. HTML5 废弃了哪些 HTML4 标签？"></a>8. HTML5 废弃了哪些 HTML4 标签？</h3><p>HTML5 废弃了一些过时的，不合理的 HTML 标签：</p>
<ul>
<li>frame</li>
<li>frameset</li>
<li>noframe</li>
<li>applet</li>
<li>big</li>
<li>center</li>
<li>basefront</li>
</ul>
<h3 id="9-HTML5-标准提供了哪些新的-API？"><a href="#9-HTML5-标准提供了哪些新的-API？" class="headerlink" title="9.HTML5 标准提供了哪些新的 API？"></a>9.HTML5 标准提供了哪些新的 API？</h3><ul>
<li>Media API</li>
<li>Text Track API</li>
<li>Application Cache API</li>
<li>User Interaction</li>
<li>Data Transfer API</li>
<li>Command API</li>
<li>Constraint Validation API</li>
<li>History API</li>
</ul>
<h3 id="10-HTML5-应用程序缓存和浏览器缓存有什么区别？"><a href="#10-HTML5-应用程序缓存和浏览器缓存有什么区别？" class="headerlink" title="10.HTML5 应用程序缓存和浏览器缓存有什么区别？"></a>10.HTML5 应用程序缓存和浏览器缓存有什么区别？</h3><p>应用程序缓存是 HTML5 的重要特性之一，提供了离线使用的功能，让应用程序可以获取本地的网站内容，例如 HTML、CSS、图片以及 JavaScript。这个特性可以提高网站性能，它的实现借助于 manifest 文件，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;!doctype html&gt;</div><div class="line">&lt;html manifest=”example.appcache”&gt;</div><div class="line">…..</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Web前端面试题&quot;&gt;&lt;a href=&quot;#Web前端面试题&quot; class=&quot;headerlink&quot; title=&quot;Web前端面试题&quot;&gt;&lt;/a&gt;Web前端面试题&lt;/h1&gt;&lt;h3 id=&quot;1-新的-HTML5-文档类型和字符集是？&quot;&gt;&lt;a href=&quot;#1-新的-HTM
    
    </summary>
    
    
      <category term="面试题" scheme="http://comradeWang.github.com/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>在线的MarkDown 文本编辑器</title>
    <link href="http://comradeWang.github.com/2017/07/05/FirstNight/"/>
    <id>http://comradeWang.github.com/2017/07/05/FirstNight/</id>
    <published>2017-07-05T03:11:46.000Z</published>
    <updated>2017-07-05T08:20:37.141Z</updated>
    
    <content type="html"><![CDATA[<p><img src="mahua-logo.jpg" alt="mahua"></p>
<p>##MaHua是什么?<br>一个在线编辑markdown文档的编辑器</p>
<p>向Mac下优秀的markdown编辑器mou致敬</p>
<p>##MaHua有哪些功能？</p>
<ul>
<li>方便的<code>导入导出</code>功能<ul>
<li>直接把一个markdown的文本文件拖放到当前这个页面就可以了</li>
<li>导出为一个html格式的文件，样式一点也不会丢失</li>
</ul>
</li>
<li>编辑和预览<code>同步滚动</code>，所见即所得（右上角设置）</li>
<li><code>VIM快捷键</code>支持，方便vim党们快速的操作 （右上角设置）</li>
<li>强大的<code>自定义CSS</code>功能，方便定制自己的展示</li>
<li>有数量也有质量的<code>主题</code>,编辑器和预览区域</li>
<li>完美兼容<code>Github</code>的markdown语法</li>
<li>预览区域<code>代码高亮</code></li>
<li>所有选项自动记忆</li>
</ul>
<p>##有问题反馈<br>在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流</p>
<ul>
<li>邮件(dev.hubo#gmail.com, 把#换成@)</li>
<li>QQ: 287759234</li>
<li>weibo: <a href="http://weibo.com/ihubo" target="_blank" rel="external">@草依山</a></li>
<li>twitter: <a href="http://twitter.com/ihubo" target="_blank" rel="external">@ihubo</a></li>
</ul>
<p>##捐助开发者<br>在兴趣的驱动下,写一个<code>免费</code>的东西，有欣喜，也还有汗水，希望你喜欢我的作品，同时也能支持一下。<br>当然，有钱捧个钱场（右上角的爱心标志，支持支付宝和PayPal捐助），没钱捧个人场，谢谢各位。</p>
<p>##感激<br>感谢以下的项目,排名不分先后</p>
<ul>
<li><a href="http://mouapp.com/" target="_blank" rel="external">mou</a> </li>
<li><a href="http://ace.ajax.org/" target="_blank" rel="external">ace</a></li>
<li><a href="http://jquery.com" target="_blank" rel="external">jquery</a></li>
</ul>
<p>##关于作者</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ihubo = &#123;</div><div class="line">  <span class="attr">nickName</span>  : <span class="string">"草依山"</span>,</div><div class="line">  <span class="attr">site</span> : <span class="string">"http://jser.me"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;mahua-logo.jpg&quot; alt=&quot;mahua&quot;&gt;&lt;/p&gt;
&lt;p&gt;##MaHua是什么?&lt;br&gt;一个在线编辑markdown文档的编辑器&lt;/p&gt;
&lt;p&gt;向Mac下优秀的markdown编辑器mou致敬&lt;/p&gt;
&lt;p&gt;##MaHua有哪些功能？&lt;/p
    
    </summary>
    
    
      <category term="MarkDown" scheme="http://comradeWang.github.com/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://comradeWang.github.com/2017/07/05/hello-world/"/>
    <id>http://comradeWang.github.com/2017/07/05/hello-world/</id>
    <published>2017-07-05T01:56:57.437Z</published>
    <updated>2017-07-05T01:56:57.440Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
